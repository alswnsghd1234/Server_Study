<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<!--
		1) 새로운 워크페이스 만들어서 이클립스로 열기
		2) 워크페이스 세팅하기 (작업환경)
		2_1) 웹 애플리케이션을 하기 위해 java EE환경으로 설정하기(없다면 오른쪽 상단에 open perspective 눌러서 추가하기 거기에도 없으면 이클립스 ee버전으로 다시 받기)
		2_2) 보여질 UI탭 없어졌으면 설정하기 [window]-[show view]
		2_3) 인코딩 설정 및 서버 설정
		2_3_1) 인코딩 설정 : 영어 숫자 한글 등 모든 문자를 사용할 수 있게 UTF-8 인코딩으로 세팅하기
		-[window]-[preference](general-workspace)-(general-editor-text editors-spelling)-(web-css,html,jsp)-(xml-xml files)
		-(json-json files)
		
		2_3_2) 서버 Runtime : 이클립스에서 서버를 실행할 수 있도록 연동하는 과정(Server-Runtime Environments)-add-설치한 톰캣버전 맞추기 -next-name(수정기능 안하면 기본값)
							-Browse클릭 - 설치한 톰캣 폴더 선택 - finish
							
		3)서버 생성하기
		3_1) [New] - [Server]
		3_2) 창에 기본적으로 2_3_2번 과정에서 세팅한 Runtime이 잡혀있다. (server name도 변경가능)
		3_3)finish
		3_4)생성된 서버 수정하기(만들어진 서버 더블클릭)
		3_4_1)http 포트번호 재설정하기 (기본값인 8080에서 8888로 변경 또는 사용하지 않는 포트번호로 변경하기)
		3_4_2)왼쪽 하단 Server Option에 Server module without publishing 체크
			-class파일들의 경로설정을 위한 사항이기 때문에 무조건 체크해야한다.
		4)Dynamic web project 만들기(동적인 웹 어플리케이션)
		4_1)프로젝트명 신중하게 작성할것 - Next
		4_2)default output folder 경로 재설정 : WebContent\WEB-INF\classes-Naxt
			-out folder로 지정된 classes 폴더에는 컴파일된 클래스 파일들이 들어가는 폴더
			실제로 프로젝트 배포시 WebContent 폴더에 컴파일된 클래스가 담긴채로 배포된다
			기본경로(build\classes)로 해놓으면 그 폴더가 WebContent 폴더안에 생성되지않고 외부에 생기기 때문에 변경하는것
		4_3)Context root : 이 애플리케이션만의 고유한 이름으로 지어줄것(기본값은 프로젝트명이지만 보통은 재정의한다)
						-하나의 서버로 여러개의 애플리케이션을 구동시킬수 있다. 고유한 이름을 따라서 해당 애플리케이션에 접근하는 경로로 사용가능하며
						-가각ㄱ의 애플리케이션을 구분지을 수 있다.
			Content directiory : 실제로 배포되는 폴더(즉, 서버에 올라가는 폴더)의 최상위 폴더명을 지정하는것 - default output folder에 WebContent 폴더로 지정하기
			Generate web.xml deployment descriptor 무조건 체크할것(기본값은 체크되어있지 않음)
			-web.xml문서에 기본적인 해당 애플리케이션에 대한 전체 설정 정보를 가지고 있는 파일(서버실행과 동시에 메인페이지를 지정해준다)
			굳이 파일을 수정할 일이 없다면 만들지 않아도 되지만(server에 있는 web.xml)수정이 필요할수 있으니 미리대비하여 생성해놓는다
			
		4_4)finish
		
		5)서버에 프로젝트 올리기
		-서버 오른쪽 버튼 -add and remove 눌러서 왼쪽에 원하는 프로젝트 선택후 add 후 apply 하기
		

	 -->
	 <h1>안녕하세요 반갑습니다</h1>
	 
	 <p>
	 	서블릿이란> <br>
	 	웹 서비스를 위한 "자바 클래스" 를 말하며 자바를 사용해서 웹을 만들기 위해 필요한 기술 <br>
	 	-사용자의 요청을 받아 처리하고 그에 해당하는 응답페이지를 만들어 다시 사용자에게 전송하는 역할을 하는 자바 클래스(Controller의 기능)
	 	- 즉, 웹에서 동적인 페이지를 JAVA로 구현할 수 있게 도와주는 서브측 프로그램(WAS 서버에서 구동된다)
	 	JAVA 클래스에서 웹페이지 구현을 위한 HTML이 들어간 구조라고 할 수 있다(java코드로 html 구현)
	 </p>
	
	<h3><a href="view/requestTest_GET.html">GET방식 테스트</a></h3>
	 
	 
	 
	 
	 
</body>
</html>